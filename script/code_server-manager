#!/bin/bash
# Source utils
source "$(dirname "$0")/../utils"
stty -echo

# File konfigurasi
CONFIG_FILE="$HOME/.config/code-server/config.yaml"
PORT_DEFAULT="8080"

# Trap untuk Ctrl+C
cleanup() {
    exit 1
}
trap cleanup INT

get_port() {
    if [[ -f "$CONFIG_FILE" ]]; then
        grep "^bind-addr:" "$CONFIG_FILE" | awk -F':' '{print $NF}'
    else
        echo "$PORT_DEFAULT"
    fi
}

get_password() {
    if [[ -f "$CONFIG_FILE" ]]; then
        grep "^password:" "$CONFIG_FILE" | cut -d' ' -f2
    else
        echo "123"
    fi
}

update_config_yaml() {
    local port=$(get_port)
    local pass=$(get_password)
    local bind=$(get_ip)
    mkdir -p "$(dirname "$CONFIG_FILE")"
    cat > "$CONFIG_FILE" <<EOF
bind-addr: $bind:$port
auth: password
password: $pass
cert: false
EOF
}

start_code_server() {
    command -v code-server >/dev/null || {
        warning "code-server belum terinstal. Menginstal..."
        pkg update -y >/dev/null && pkg install tur-repo -y >/dev/null && pkg install code-server -y >/dev/null
    }

    update_config_yaml
    success "Menjalankan code-server..."
    nohup code-server >/dev/null 2>&1 &
    sleep 1
}

stop_code_server() {
    pkill -f code-server >/dev/null 2>&1 && success "code-server dihentikan." || error "code-server tidak aktif."
}

status_info() {
    local port=$(get_port)
    local bind=$(get_ip)
    local status

    if pgrep -f code-server >/dev/null; then
        status="${GREEN}[âœ”] code-server aktif${RESET}"
    else
        status="${RED}[âœ˜] code-server tidak aktif${RESET}"
    fi

    echo -e "${status}  ${CYAN}IP:${RESET} $bind  ${CYAN}Port:${RESET} $port"
    echo -e "${CYAN}Access:${RESET} http://$bind:$port"
}

set_port() {
    read -e -p "$(echo -e "${YELLOW}[?] Masukkan port baru (default $PORT_DEFAULT): ${RESET}")" new_port
    if [[ "$new_port" =~ ^[0-9]+$ ]]; then
        local pass=$(get_password)
        local bind=$(get_ip)
        mkdir -p "$(dirname "$CONFIG_FILE")"
        cat > "$CONFIG_FILE" <<EOF
bind-addr: $bind:$new_port
auth: password
password: $pass
cert: false
EOF
        success "Port berhasil disimpan."
    else
        error "Port tidak valid."
    fi
    sleep 1
}

set_password() {
    read -e -sp "$(echo -e "${YELLOW}[?] Masukkan password baru untuk code-server: ${RESET}")" pass
    echo
    if [[ -n "$pass" ]]; then
        local port=$(get_port)
        local bind=$(get_ip)
        mkdir -p "$(dirname "$CONFIG_FILE")"
        cat > "$CONFIG_FILE" <<EOF
bind-addr: $bind:$port
auth: password
password: $pass
cert: false
EOF
        success "Password berhasil disimpan."
    else
        error "Password tidak boleh kosong."
    fi
    sleep 1
}

menu() {
    while true; do
        clear
        banner "ðŸ’» CODE SERVER MANAGER v1.0"
        divider
        status_info
        divider
        echo -e "${CYAN}1.${RESET} Start code-server"
        echo -e "${CYAN}2.${RESET} Stop code-server"
        echo -e "${CYAN}3.${RESET} Restart code-server"
        echo -e "${CYAN}4.${RESET} Ubah Port"
        echo -e "${CYAN}5.${RESET} Ubah Password"
        echo -e "${CYAN}q.${RESET} Keluar"
        divider
        stty echo
        read -e -p "$(echo -e "${YELLOW}[?] Pilih opsi: ${RESET}")" opsi

        case "$opsi" in
            1) start_code_server ;;
            2) stop_code_server ;;
            3) stop_code_server && sleep 1 && start_code_server ;;
            4) set_port ;;
            5) set_password ;;
            q|x) error "Keluar..."; exit ;;
            *) error "Opsi tidak valid"; sleep 1 ;;
        esac
    done
}

menu