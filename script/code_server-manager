#!/data/data/com.termux/files/usr/bin/bash

# Warna
CYAN='\033[1;36m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
RESET='\033[0m'

# File konfigurasi internal
PORT_FILE="$HOME/.code_server_port"
PASSWORD_FILE="$HOME/.code_server_password"
CONFIG_FILE="$HOME/.config/code-server/config.yaml"
PORT_DEFAULT="8080"

banner() {
    clear
    echo -e "${CYAN}"
    echo -e "┌──────────────────────────────────────────────┐"
    echo -e "│         💻 CODE SERVER MANAGER v1.0          │"
    echo -e "└──────────────────────────────────────────────┘${RESET}"
}

divider() {
    echo -e "${CYAN}──────────────────────────────────────────────${RESET}"
}

get_port() {
    [[ -f "$PORT_FILE" ]] && cat "$PORT_FILE" || echo "$PORT_DEFAULT"
}

get_password() {
    [[ -f "$PASSWORD_FILE" ]] && cat "$PASSWORD_FILE" || echo "123"
}

get_ip() {
    ifconfig 2>/dev/null | awk '
        BEGIN { in_wlan=0 }
        /^wlan0/ { in_wlan=1; next }
        in_wlan && /inet / { print $2; exit }'
}

update_config_yaml() {
    local port=$(get_port)
    local pass=$(get_password)
    local bind=$(get_ip)
    mkdir -p "$(dirname "$CONFIG_FILE")"
    cat > "$CONFIG_FILE" <<EOF
bind-addr: $bind:$port
auth: password
password: $pass
cert: false
EOF
}

start_code_server() {
    command -v code-server >/dev/null || {
        echo -e "${YELLOW}[!] code-server belum terinstal. Menginstal...${RESET}"
        pkg update -y >/dev/null && pkg install tur-repo -y >/dev/null && pkg install code-server -y >/dev/null
    }

    update_config_yaml
    echo -e "${GREEN}[✔] Menjalankan code-server...${RESET}"
    nohup code-server >/dev/null 2>&1 &
    sleep 1
}

stop_code_server() {
    pkill -f code-server >/dev/null 2>&1 && echo -e "${GREEN}[✔] code-server dihentikan.${RESET}" || echo -e "${RED}[!] code-server tidak aktif.${RESET}"
}

status_info() {
    local port=$(get_port)
    local bind=$(get_ip)
    local status

    if pgrep -f code-server >/dev/null; then
        status="${GREEN}[✔] code-server aktif${RESET}"
    else
        status="${RED}[✘] code-server tidak aktif${RESET}"
    fi

    echo -e "${status}  ${CYAN}IP:${RESET} $bind  ${CYAN}Port:${RESET} $port"
    echo -e "${CYAN}Access:${RESET} http://$bind:$port"
}

set_port() {
    read -p "$(echo -e "${YELLOW}[?] Masukkan port baru (default $PORT_DEFAULT): ${RESET}")" new_port
    if [[ "$new_port" =~ ^[0-9]+$ ]]; then
        echo "$new_port" > "$PORT_FILE"
        echo -e "${GREEN}[✔] Port berhasil disimpan.${RESET}"
        update_config_yaml
    else
        echo -e "${RED}[!] Port tidak valid.${RESET}"
    fi
    sleep 1
}

set_password() {
    read -sp "$(echo -e "${YELLOW}[?] Masukkan password baru untuk code-server: ${RESET}")" pass
    echo
    if [[ -n "$pass" ]]; then
        echo "$pass" > "$PASSWORD_FILE"
        echo -e "${GREEN}[✔] Password berhasil disimpan.${RESET}"
        update_config_yaml
    else
        echo -e "${RED}[!] Password tidak boleh kosong.${RESET}"
    fi
    sleep 1
}

menu() {
    while true; do
        banner
        divider
        status_info
        divider
        echo -e "${CYAN}1.${RESET} Start code-server"
        echo -e "${CYAN}2.${RESET} Stop code-server"
        echo -e "${CYAN}3.${RESET} Restart code-server"
        echo -e "${CYAN}4.${RESET} Ubah Port"
        echo -e "${CYAN}5.${RESET} Ubah Password"
	echo -e "${CYAN}q.${RESET} Keluar"
        divider
        read -p "$(echo -e "${YELLOW}[?] Pilih opsi: ${RESET}")" opsi

        case "$opsi" in
            1) start_code_server ;;
            2) stop_code_server ;;
            3) stop_code_server && sleep 1 && start_code_server ;;
            4) set_port ;;
            5) set_password ;;
            q|x) echo -e "${RED}Keluar...${RESET}"; exit ;;
            *) echo -e "${RED}[!] Opsi tidak valid${RESET}"; sleep 1 ;;
        esac
    done
}

menu
